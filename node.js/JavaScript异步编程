# JavaScript异步编程

## javaScript异步编程的四种方法

* 回调函数

* 事件监听

* 发布/订阅

* Promise



## 大部分回调函数是异步模式（不是所有）

## promise

### promise对象只有三种状态

* 异步操作“未完成”（pending）

* 异步操作“已完成”（resolved,又称fulfilled）

* 异步操作“失败”（rejected）

### 这三种状态的变化途径只有两种

* 异步操作从“未完成”到“已完成”

* 异步操作从“未完成”到“失败”

### 这种变化只能发生一次，一旦单前状态变为“已完成”或“失败”，就意味着不会再有新的状态变化了。因此，promise的最终结果只有两种。

* 异步操作成功，Promise对象传回一个值，状态变为resolved

* 异步操作失败，promise对象抛出一个错误，状态变为rejected

### promise对象使用then方法添加回调函数，第一个是异步操作成功时（变为resolved状态）时的回调函数，第二个是异步操作失败（变为rejected）时的回调函数（可以省略）。一旦状态改变，就调用相应的回调函数。
